
services:
  citizen-app:
    image: "citizen-registry"
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "80:8080"
    healthcheck:
      test: ["CMD","sleep 5" ,"curl", "-f", "http://localhost:8080/api/citizens"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: on-failure
    environment:
      DB_HOST: postgres-db
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}

#      SPRING_DATASOURCE_USERNAME_FILE: /run/secrets/db_user
#      SPRING_DATASOURCE_PASSWORD_FILE: /run/secrets/db_password
#    secrets:
#      - db_user
#      - db_password

    networks:
      - citizen-net
    depends_on:
      postgres-db:
        condition: service_healthy

  postgres-db:
    image: postgres:15-alpine
    ports:
      - "5432"
    healthcheck:
#      test: ["CMD-SHELL", "pg_isready -U $$(cat /run/secrets/db_user)"]
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      timeout: 20s
      retries: 5
    restart: on-failure
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}

#    environment:
#      POSTGRES_DB: ${DB_NAME}
#      POSTGRES_USER_FILE: /run/secrets/db_user
#      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
#    secrets:
#      - db_user
#      - db_password

    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - citizen-net

networks:
  citizen-net:

volumes:
  postgres-data:

#secrets:
#  db_user:
#    file: ./db_user.txt
#  db_password:
#    file: ./db_password.txt