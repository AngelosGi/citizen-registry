# PostgreSQL Database Config

spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:5432/${DB_NAME:citizens}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=${DB_USER:appuser}
spring.datasource.password=${DB_PASSWORD:password}
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Hibernate settings
spring.jpa.hibernate.ddl-auto=update  # Use 'validate' or 'none' in production
spring.jpa.show-sql=true  # Optional: Enable logging of SQL statements

# Swagger Config
springdoc.packagesToScan=io.anggi.citizen.registry
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs

# Date format for JSON serialization/deserialization
spring.jackson.date-format=dd-MM-yyyy

# Date format for request parameters and responses
spring.mvc.format.date=dd-MM-yyyy

# need this for validation,when test By default, JPA does not validate entities before persisting them.
#b Without explicit validation, an invalid entity can be saved to the database. (??? how this works I don't know/unable to understand.)
spring.jpa.properties.jakarta.persistence.validation.mode=CALLBACK


#default to Json, it was returning XML.
spring.mvc.contentnegotiation.default-media-type=application/json
#spring.mvc.contentnegotiation.favor-parameter=false
#spring.mvc.contentnegotiation.favor-path-extension=false
#spring.mvc.contentnegotiation.ignore-accept-header=false